#define A_POWER         7
#define C_POWER         7
#define TURN_TIME       115
#define SHORT_TURN_TIME TURN_TIME / 3

// Retningsvariabel (0 = venstre, 1 = høyre)
int direction = 0;

void turn(int direction, int time) {
	int extra = 0;

	// Rygger i 0,5 s
	OnRev(OUT_A + OUT_C);
	Wait(50);

	// Hvis direction = 0, sving til venstre
	if(direction == 0) {
		SetDirection(OUT_C, OUT_FWD);
	}
	// Hvis direction = 1, sving til høyre
	else {
		SetDirection(OUT_A, OUT_FWD);
	}

	// Snu i time cs
	// Hvis kollisjoner, snu litt til
	ClearTimer(0);
	while(Timer(0) < time / 10 + extra) {
		if(SENSOR_1 == 1 ||
		   SENSOR_3 == 1) {
			extra++;
			Wait(10);
		}
	}
	// Kjør fremover
	SetDirection(OUT_A + OUT_C, OUT_FWD);
}

void align(int direction) {
	// Divisor for 10 * SHORT_TURN_TIME
	int divisor = 10;

	// Kjør fremover i 0,5 s
	OnFwd(OUT_A + OUT_C);
	Wait(50);

	while(SENSOR_1 != SENSOR_3) {
		// Hvis siste kollisjon var på direction side, snu mot den
		if(SENSOR_1 != direction &&
		   SENSOR_3 == direction) {
			turn(direction, (10 * SHORT_TURN_TIME) / divisor);
			// Kjør fremover mens det er fri bane,
			// og kjør på litt til
			while(SENSOR_1 == 0 &&
			      SENSOR_3 == 0) {
				SetDirection(OUT_A + OUT_C, OUT_FWD);
			}
			Wait(10);
		}
		else {
			// Skift venderetning
			if(direction == 0) {
				direction = 1;
			}
			else {
				direction = 0;
			}

			// Øk divisoren (korter ned på snutiden)
			divisor = (divisor * 3) / 2;
		}
	}
}

task main() {
	// Kalibering
	SetPower(OUT_A, A_POWER);
	SetPower(OUT_C, C_POWER);

	// Direction støtsensor
	SetSensor(SENSOR_1, SENSOR_TOUCH);
	// Lyssensor (montert bak)
	SetSensor(SENSOR_2, SENSOR_LIGHT);
	// Høyre støtsensor
	SetSensor(SENSOR_3, SENSOR_TOUCH);

	start move;
	start monitSides;
	start monitFront;
}

task move() {
	while(true) {
		// Kjør fremover
		OnFwd(OUT_A + OUT_C);

		// Hvis kollisjon på direction side,
		// prøv å svinge til høyre i 0,5 s
		if(SENSOR_1 == 1 &&
		   SENSOR_3 == 0) {
			Float(OUT_C);
			Wait(50);
		}
		// Hvis kollisjon på høyre side,
		// prøv å svinge til direction i 0,5 s
		else if(SENSOR_1 == 0 &&
		        SENSOR_3 == 1) {
			Float(OUT_A);
			Wait(50);
		}
	}
}

task monitSides() {
	while(true) {
		ClearTimer(0);

		while(SENSOR_1 != SENSOR_3) {
			if(Timer(0) > 10) {
				stop move;
				if(SENSOR_1 == 0) {
					direction = 0;
					align(direction);
				}
				else {
					direction = 1;
					align(direction);
				}
				start move;
			}
		}
	}
}

task monitFront() {
	while(true) {
		if(SENSOR_1 == 1 &&
		   SENSOR_3 == 1) {
			stop monitSides;      // "01 avbryter. Det er Fox 04 her.
			stop move;            // Hallo - hold kjeft! Hold kjeft nå.
			OnFwd(OUT_A + OUT_C); // Jeg kaller alle biler."
			Wait(10);
			turn(direction, TURN_TIME);
			start move;
			start monitSides;
		}
	}
}
